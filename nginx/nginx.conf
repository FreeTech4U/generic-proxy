user nginx;

worker_processes auto;

events {
    worker_connections 1024;  # Adjust this based on your server's capacity and expected traffic
}

http {
    default_type  application/octet-stream;
    include /etc/nginx/mime.types;

   # Define custom log format
    log_format custom '$request_uri -> $proxy_host$request_uri';
    access_log /var/log/nginx/access.log custom;

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name freetech4u.fr;

        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Redirect to HTTPS
        return 301 https://$host:443$request_uri;
    }


    server {
        listen 443 ssl;
        server_name freetech4u.fr;

        # SSL Certificate and key
        #ssl_certificate /etc/nginx/ssl/doc_ketura_cert.pem;
        #ssl_certificate_key /etc/nginx/ssl/doc_ketura_key.pem;

        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Optimize SSL
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_prefer_server_ciphers on;

        root /usr/share/nginx/html;
        index index.html index.htm;

        # Serve Angular frontend app
        location / {
            proxy_pass http://localhost:8080/;  # Redirige vers Angular en local
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            proxy_pass http://localhost:8080/;  # Redirige vers API backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 404 /index.html;
    }
}
